AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Anghammarad Lambda and SNS topic

Parameters:
  ArtifactBucket:
    Description: S3 bucket containing the Lambda's artifact
    Type: String
  ArtifactLocation:
    Description: S3 path to the Lambda's artifact
    Type: String
  Stage:
    Description: Application stage (e.g. PROD, CODE)
    Type: String
    AllowedValues:
    - PROD
    - CODE
    - DEV

Mappings:
  Constants:
    Stack:
      Value: deploy
    App:
      Value: anghammarad

Resources:

  AnghammaradRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub Anghammarad-${Stage}
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
            - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: LambdaPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                - ses:SendEmail
                Resource: "*"

  ProcessorFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub anghammarad-${Stage}
      Description: !Sub Process Anghammarad ${Stage} notifications
      Role: !GetAtt AnghammaradRole.Arn
      Handler: com.gu.anghammarad.Main::handleRequest
      Runtime: java8
      MemorySize: 512
      Timeout: 30
      CodeUri:
        Bucket: !Ref ArtifactBucket
        Key: !Ref ArtifactLocation
      Events:
        Notification:
          Type: SNS
          Properties:
            Topic: !Ref NotificationTopic
      Tags:
        Stack: !FindInMap [ Constants, Stack, Value ]
        App: !FindInMap [ Constants, App, Value ]
        Stage: !Ref Stage

  NotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub Anghammarad ${Stage} notification topic

Outputs:
  TopicName:
    Value: !GetAtt NotificationTopic.TopicName
